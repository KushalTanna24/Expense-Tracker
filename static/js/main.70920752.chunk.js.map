{"version":3,"sources":["Components/Expenses/ExpenseDate.js","Components/UI/Card.js","Components/Expenses/ExpenseItem.js","Components/Expenses/ExpensesFilter.js","Components/Chart/ChartBar.js","Components/Chart/Chart.js","Components/Expenses/ExpenseChart.js","Components/Expenses/Expenses.js","Components/NewExpense/ExpenseForm.js","Components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesFilter","onChange","event","onChangeFilter","target","value","selected","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expenses","filteredExpense","useState","filteredYear","setFilteredYear","items","filter","toString","selectedYear","length","id","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancelButton","NewExpense","isEditing","setIsEditing","enteredExpenseData","floor","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.70920752.chunk.js","sourcesContent":["// import { useState } from 'react';\n\nimport './ExpenseDate.css'\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__day'>{day}</div> \n      <div className='expense-date__year'>{year}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import \"./Card.css\";\n\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import \"./ExpenseItem.css\";\n\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n    </Card>\n  );\n};\n\nexport default ExpenseItem;\n","// import React, { useState } from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select onChange={dropdownChangeHandler} value={props.selected}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n          <option value=\"All\">All</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from \"react\";\n\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\n\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\n\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import \"./Expenses.css\";\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport Card from \"../UI/Card\";\nimport ExpensesChart from \"./ExpenseChart\";\nimport \"./ExpensesLists.css\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"All\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  let filteredExpense;\n\n  if (filteredYear === \"All\") {\n    filteredExpense = props.items;\n  } else {\n    filteredExpense = props.items.filter((expense) => {\n      return expense.date.getFullYear().toString() === filteredYear;\n    });\n  }\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          onChangeFilter={filterChangeHandler}\n          selected={filteredYear}\n        />\n        <ExpensesChart expenses={filteredExpense} />\n        {filteredExpense.length === 0 ? (\n          <p className=\"expenses-list__fallback\">No Expenses Found</p>\n        ) : (\n          filteredExpense.map((expense) => (\n            <ExpenseItem\n              key={expense.id}\n              title={expense.title}\n              amount={expense.amount}\n              date={expense.date}\n            />\n          ))\n        )}\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        {/* title */}\n        <div className=\"new-expense__control\">\n          <label> Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n\n        {/* Amount */}\n        <div className=\"new-expense__control\">\n          <label> Amount </label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n\n        {/* //date */}\n        <div className=\"new-expense__control\">\n          <label> Date </label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n\n        {/* //submit button */}\n        <div className=\"new-expense__actions\">\n          <button type=\"button\" onClick={props.onCancelButton}>\n            Cancel\n          </button>\n          <button type=\"submit\">Add Expense</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\n\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveExpenseDatahandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.floor(Math.random() * 10 + 1).toString(),\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const isEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const cancelHandler = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button onClick={isEditingHandler}>Add New Expense</button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDatahandler}\n          onCancelButton={cancelHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React, { useState } from \"react\";\nimport Expenses from \"./Components/Expenses/Expenses\";\nimport NewExpense from \"./Components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses(prevExpenses =>{\n      return [expense, ...prevExpenses]\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}